/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  NormalCustomField as PrismaNormalCustomField,
  Property as PrismaProperty,
} from "@prisma/client";

export class NormalCustomFieldServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.NormalCustomFieldCountArgs, "select">
  ): Promise<number> {
    return this.prisma.normalCustomField.count(args);
  }

  async normalCustomFields(
    args: Prisma.NormalCustomFieldFindManyArgs
  ): Promise<PrismaNormalCustomField[]> {
    return this.prisma.normalCustomField.findMany(args);
  }
  async normalCustomField(
    args: Prisma.NormalCustomFieldFindUniqueArgs
  ): Promise<PrismaNormalCustomField | null> {
    return this.prisma.normalCustomField.findUnique(args);
  }
  async createNormalCustomField(
    args: Prisma.NormalCustomFieldCreateArgs
  ): Promise<PrismaNormalCustomField> {
    return this.prisma.normalCustomField.create(args);
  }
  async updateNormalCustomField(
    args: Prisma.NormalCustomFieldUpdateArgs
  ): Promise<PrismaNormalCustomField> {
    return this.prisma.normalCustomField.update(args);
  }
  async deleteNormalCustomField(
    args: Prisma.NormalCustomFieldDeleteArgs
  ): Promise<PrismaNormalCustomField> {
    return this.prisma.normalCustomField.delete(args);
  }

  async getProperty(parentId: string): Promise<PrismaProperty | null> {
    return this.prisma.normalCustomField
      .findUnique({
        where: { id: parentId },
      })
      .property();
  }
}
