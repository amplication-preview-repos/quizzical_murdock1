/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ImageCustomField as PrismaImageCustomField,
  Property as PrismaProperty,
} from "@prisma/client";

export class ImageCustomFieldServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ImageCustomFieldCountArgs, "select">
  ): Promise<number> {
    return this.prisma.imageCustomField.count(args);
  }

  async imageCustomFields(
    args: Prisma.ImageCustomFieldFindManyArgs
  ): Promise<PrismaImageCustomField[]> {
    return this.prisma.imageCustomField.findMany(args);
  }
  async imageCustomField(
    args: Prisma.ImageCustomFieldFindUniqueArgs
  ): Promise<PrismaImageCustomField | null> {
    return this.prisma.imageCustomField.findUnique(args);
  }
  async createImageCustomField(
    args: Prisma.ImageCustomFieldCreateArgs
  ): Promise<PrismaImageCustomField> {
    return this.prisma.imageCustomField.create(args);
  }
  async updateImageCustomField(
    args: Prisma.ImageCustomFieldUpdateArgs
  ): Promise<PrismaImageCustomField> {
    return this.prisma.imageCustomField.update(args);
  }
  async deleteImageCustomField(
    args: Prisma.ImageCustomFieldDeleteArgs
  ): Promise<PrismaImageCustomField> {
    return this.prisma.imageCustomField.delete(args);
  }

  async getProperty(parentId: string): Promise<PrismaProperty | null> {
    return this.prisma.imageCustomField
      .findUnique({
        where: { id: parentId },
      })
      .property();
  }
}
