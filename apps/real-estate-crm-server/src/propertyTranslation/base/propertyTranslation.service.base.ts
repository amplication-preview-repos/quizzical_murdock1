/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PropertyTranslation as PrismaPropertyTranslation,
  Locale as PrismaLocale,
  Property as PrismaProperty,
} from "@prisma/client";

export class PropertyTranslationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PropertyTranslationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.propertyTranslation.count(args);
  }

  async propertyTranslations(
    args: Prisma.PropertyTranslationFindManyArgs
  ): Promise<PrismaPropertyTranslation[]> {
    return this.prisma.propertyTranslation.findMany(args);
  }
  async propertyTranslation(
    args: Prisma.PropertyTranslationFindUniqueArgs
  ): Promise<PrismaPropertyTranslation | null> {
    return this.prisma.propertyTranslation.findUnique(args);
  }
  async createPropertyTranslation(
    args: Prisma.PropertyTranslationCreateArgs
  ): Promise<PrismaPropertyTranslation> {
    return this.prisma.propertyTranslation.create(args);
  }
  async updatePropertyTranslation(
    args: Prisma.PropertyTranslationUpdateArgs
  ): Promise<PrismaPropertyTranslation> {
    return this.prisma.propertyTranslation.update(args);
  }
  async deletePropertyTranslation(
    args: Prisma.PropertyTranslationDeleteArgs
  ): Promise<PrismaPropertyTranslation> {
    return this.prisma.propertyTranslation.delete(args);
  }

  async getLocale(parentId: string): Promise<PrismaLocale | null> {
    return this.prisma.propertyTranslation
      .findUnique({
        where: { id: parentId },
      })
      .locale();
  }

  async getProperty(parentId: string): Promise<PrismaProperty | null> {
    return this.prisma.propertyTranslation
      .findUnique({
        where: { id: parentId },
      })
      .property();
  }
}
