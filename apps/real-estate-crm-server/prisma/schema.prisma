datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Property {
  address              String?
  appointments         Appointment[]
  createdAt            DateTime              @default(now())
  description          String?
  id                   String                @id @default(cuid())
  imageCustomFields    ImageCustomField[]
  listCustomFields     ListCustomField[]
  normalCustomFields   NormalCustomField[]
  price                Int?
  propertyTranslations PropertyTranslation[]
  size                 Float?
  updatedAt            DateTime              @updatedAt
}

model Client {
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  email        String?
  id           String        @id @default(cuid())
  name         String?
  phone        String?
  updatedAt    DateTime      @updatedAt
}

model Appointment {
  agent      Agent?    @relation(fields: [agentId], references: [id])
  agentId    String?
  client     Client?   @relation(fields: [clientId], references: [id])
  clientId   String?
  createdAt  DateTime  @default(now())
  date       DateTime?
  id         String    @id @default(cuid())
  notes      String?
  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?
  updatedAt  DateTime  @updatedAt
}

model Agent {
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  email        String?
  id           String        @id @default(cuid())
  name         String?
  phone        String?
  updatedAt    DateTime      @updatedAt
}

model Locale {
  createdAt            DateTime              @default(now())
  id                   String                @id @default(cuid())
  name                 String?
  propertyTranslations PropertyTranslation[]
  updatedAt            DateTime              @updatedAt
}

model ImageCustomField {
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  image      Json?
  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?
  updatedAt  DateTime  @updatedAt
}

model ListCustomField {
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  label      String?
  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?
  updatedAt  DateTime  @updatedAt
}

model PropertyTranslation {
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(cuid())
  locale      Locale?   @relation(fields: [localeId], references: [id])
  localeId    String?
  property    Property? @relation(fields: [propertyId], references: [id])
  propertyId  String?
  updatedAt   DateTime  @updatedAt
}

model NormalCustomField {
  content    String?
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  label      String?
  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?
  updatedAt  DateTime  @updatedAt
}

model CustomFieldListEntry {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  listEntry String?
  updatedAt DateTime @updatedAt
}
